apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

def gradlePropertiesFile = rootProject.file("gradle.properties")
def gradleProperties = new Properties()
gradleProperties.load(new FileInputStream(gradlePropertiesFile))

android {
    compileSdkVersion version_compile_sdk
    buildToolsVersion version_build_tools

    defaultConfig {
        applicationId "com.franjo.github"
        minSdkVersion version_min_sdk
        targetSdkVersion version_target_sdk
        versionCode version_code
        versionName version_name

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField("String", "CLIENT_ID", gradleProperties["CLIENT_ID"])
        buildConfigField("String", "CLIENT_SECRET", gradleProperties["CLIENT_SECRET"])
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [enableCrashReporting: "true"]
        }
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    android.buildFeatures.dataBinding = true

}

dependencies {
    implementation project(":presentation")
    implementation project(":domain")
    implementation project(":data")

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$version_kotlin"

    // Paging
    implementation "androidx.paging:paging-runtime-ktx:$version_paging"

    // Dagger
    implementation "com.google.dagger:dagger:$version_dagger"
    kapt "com.google.dagger:dagger-compiler:$version_dagger"
    implementation "com.google.dagger:dagger-android:$version_dagger"
    implementation "com.google.dagger:dagger-android-support:$version_dagger"
    kapt "com.google.dagger:dagger-android-processor:$version_dagger"

}