apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: "kotlin-kapt"
apply plugin: 'kotlin-android-extensions'
apply plugin: "androidx.navigation.safeargs.kotlin"

android {
    compileSdkVersion 30
    buildToolsVersion "29.0.3"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    implementation "androidx.appcompat:appcompat:$version_appcompat"
    implementation "androidx.constraintlayout:constraintlayout:$version_constraint_layout"
    implementation "com.google.android.material:material:$version_material"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$version_kotlin"

    // Android KTX
    implementation "androidx.core:core-ktx:$version_core"

    // Navigation
    implementation "android.arch.navigation:navigation-fragment-ktx:$version_navigation"
    implementation "android.arch.navigation:navigation-ui-ktx:$version_navigation"

    // Coroutines for getting off the UI thread
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$version_kotlin_coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$version_kotlin_coroutines"

    // Retrofit for networking
    implementation "com.squareup.retrofit2:retrofit:$version_retrofit"
    implementation "com.google.code.gson:gson:$version_gson"
    implementation "com.squareup.retrofit2:converter-gson:$version_gson_converter"
    implementation "com.squareup.okhttp3:okhttp:$version_okhttp"
    implementation "com.squareup.okhttp3:logging-interceptor:$version_http_logging_interceptor"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$version_retrofit_coroutines_adapter"

    // Room database
    implementation "androidx.room:room-runtime:$version_room"
    implementation "androidx.room:room-ktx:$version_room"
    kapt "androidx.room:room-compiler:$version_room"

    // Dagger
    implementation "com.google.dagger:dagger:$version_dagger"
    implementation "com.google.dagger:dagger-android:$version_dagger"
    implementation "com.google.dagger:dagger-android-support:$version_dagger"
    kapt "com.google.dagger:dagger-android-processor:$version_dagger"
    kapt "com.google.dagger:dagger-compiler:$version_dagger"

    // Joda time library for dealing with time
    implementation "joda-time:joda-time:$version_joda"

    // ViewModel and LiveData (arch components)
    implementation "androidx.lifecycle:lifecycle-extensions:$version_lifecycle_extensions"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$version_lifecycle_extensions"

    // Logging
    implementation "com.jakewharton.timber:timber:$version_timber"

    // Glide for images
    implementation "com.github.bumptech.glide:glide:$version_glide"

    // WorkManager
    implementation "android.arch.work:work-runtime-ktx:$version_work"

    // Multidex
    implementation 'com.android.support:multidex:1.0.3'

    debugImplementation "com.squareup.leakcanary:leakcanary-android:$version_leak_canary"


    // Testing
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

}